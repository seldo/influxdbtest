{
  "name": "influx",
  "version": "0.2.0",
  "description": "InfluxDB Client",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha -R dot",
    "travis-test": "./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls && rm -rf ./coverage"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bencevans/node-influx.git"
  },
  "keywords": [
    "influx",
    "influxdb",
    "time",
    "series",
    "client",
    "db"
  ],
  "author": {
    "name": "Ben Evans",
    "email": "ben@bensbit.co.uk",
    "url": "http://bensbit.co.uk"
  },
  "license": "MIT",
  "dependencies": {
    "request": "~2.33.0",
    "underscore": "~1.5.2"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "istanbul": "~0.2.4",
    "coveralls": "~2.7.0"
  },
  "readme": "# node-influx\n\nAn [InfluxDB](http://influxdb.org/) Node.js Client\n\n[![Build Status](https://travis-ci.org/bencevans/node-influx.png?branch=master)](https://travis-ci.org/bencevans/node-influx)\n[![Coverage Status](https://coveralls.io/repos/bencevans/node-influx/badge.png?branch=master)](https://coveralls.io/r/bencevans/node-influx?branch=master)\n[![Dependency Status](https://david-dm.org/bencevans/node-influx.png)](https://david-dm.org/bencevans/node-influx)\n\n## Installation\n\n`npm install influx`\n\n## Usage\n\nCreate a client instance (`database` not required for all methods):\n\n```js\nvar influx = require('influx');\nvar client = influx(host, port, username, password, database);\n```\n\n\n## Functions\n\n###createDatabase\nCreates a new database - requires cluster admin privileges\n\n```js\ncreateDatabase(databaseName, callback) { }\n```\n\n###deleteDatabase\nDeletes a database - requires cluster admin privileges\n\n```js\ndeleteDatabase(databaseName, callback) { }\n```\n\n###getDatabaseNames\nReturns array of database names - requires cluster admin privileges\n\n```js\ngetDatabaseNames(function(err,arrayDatabaseNames){}) { }\n```\n\n###getSeriesNames\nReturns array of series names from given database - requires database admin privileges\n\n```js\ngetSeriesNames(databaseName, function(err,arraySeriesNames){} ) { }\n```\n\n###createUser\nCreates a new database user - requires cluster admin privileges\n\n```js\ncreateUser(databaseName, username, password, callback) { }\n```\n\n###writePoint\nWrites a point to a series - requires database user privileges\n\n```js\nvar point = { attr : value, time : new Date()};\nwritePoint(seriesName, point, options, callback) { }\n```\n\n###writePoints\nWrites multiple point to a series - requires database user privileges\n\n```js\nvar points = [ {attr : value, time : new Date()}, {attr : value2, time : new Date()}];\nwritePoint(seriesName, points, options, callback) { }\n```\n\n###writeSeries\nWrites multiple point to multiple series - requires database user privileges\n\n```js\nvar points = [ {attr : value, time : new Date()}, {attr : value2, time : new Date()}];\nvar points2 = [ {attr : value, time : new Date()}, {attr : value2, time : new Date()}];\n\nvar series = {\n    series_name_one : points,\n    series_name_two : points2\n};\n\nwriteSeries(series, options, callback) { }\n```\n*Please note that there's a POST limit at about 2MB per request. Do not submit too many points at once.*\n\n###query\nQueries the database - requires database user privileges\n\n```js\nvar query = 'SELECT MEDIAN(column) FROM myseries WHERE time > now() - 24h';\nquery(query, callback) { }\n\n\nquery(query, callback) { }\n\n```\n\n\n###readPoints\nReads points from a database - requires database user privileges\n\n```js\nreadPoints(query, callback) { }\n```\n*readPoints() has been replaced with query(), please upgrade *\n\n\n\n\nAs Jeff Atwood puts it... [Read the source, Luke](http://www.codinghorror.com/blog/2012/04/learn-to-read-the-source-luke.html). If you're still stuck, read the `./examples/*` files and the `./test.js` file.\n\n\n## Licence\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bencevans/node-influx/issues"
  },
  "_id": "influx@0.2.0",
  "dist": {
    "shasum": "688f0787b4e0eceae32ba32a447e3cbe6b459e0b"
  },
  "_from": "influx@",
  "_resolved": "https://registry.npmjs.org/influx/-/influx-0.2.0.tgz"
}
